version: '3'
services:
  mongo: 
    container_name: mongo
    volumes:
      - ./mongodb/data/db:/data/db
    image: mongo
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: admin    
    ports:
       - 27017:27017
    networks:
      - backend
  nginx:
    # build: ./nginx/.
    container_name: nginx
    image: nginx
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
    ports:
    - 80:80
    command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - backend        
    depends_on:
      - golang
      - ui
  golang:
    container_name: golang
    build:
      context: ./api/golang/
    ports:
      - 8101:8101
    networks:
      - backend
    volumes:
      - ./api/golang/:/usr/app
    depends_on:
      - mongo
    #   - "rabbit"
    #   - "kafka"
  # nest:
  #   container_name: nest
  #   build: ./api/nest/.
  #   ports:
  #     - 8102
  #   network_mode: host
  #   volumes:
  #     - ./api/nest.:/usr/app
    # depends_on:
    #   - "rabbit"
    #   - "kafka"
  ui:
    container_name: ui
    build: ./ui/.
    networks:
      - backend
    volumes:
      - ./ui/.:/usr/app
    ports:
      - 3000:3000
    depends_on:
      - "golang"
  # rabbit:
  #   container_name: rabbit
  #   image: rabbitmq
  #   network_mode: host
  # kafka:
  #   container_name: kafka
  #   image: bitnami/kafka
  #   network_mode: host
networks:
  backend:
    driver: bridge
      

        


